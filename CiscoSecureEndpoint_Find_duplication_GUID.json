{
  "workflow": {
    "unique_name": "definition_workflow_02FEP8IQ605CJ3m9b1LQ2d4bhP3TuysP4on",
    "name": "Secure_Endpoint_Find_duplication_GUID",
    "title": "Secure_Endpoint_Find_duplication_GUID",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Duplicate_Ouput",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02FEP8IQQ6G9T3iVE8ez4vXipJF4S2XOJMl",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "automation_rules": {
        "type": [
          "schedule.rule_schedule"
        ]
      },
      "delete_workflow_instance": false,
      "display_name": "Secure_Endpoint_Find_duplication_GUID",
      "runtime_user": {},
      "target": {
        "execute_on_target_group": true,
        "target_group": {
          "target_group_id": "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH",
          "run_on_all_targets": false,
          "selected_target_types": [
            "web-service.endpoint"
          ],
          "use_criteria": {
            "choose_target_using_algorithm": "choose_first_with_matching_criteria",
            "conditions": [
              {
                "operator": "mw",
                "left_operand": "$targetgroup.target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH.common.display_name$",
                "right_operand": "Secure Endpoint*"
              }
            ]
          }
        }
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02FEP8IV4W5N91cCNlto2DHIJUpR5vInNrI",
        "name": "Secure Endpoint - List Computers",
        "title": "Secure Endpoint - List Computers",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Secure Endpoint - List Computers",
          "input": {
            "variable_workflow_02FEG871Y8GHB46PpGp4vG8yyCNjXkptP43": "",
            "variable_workflow_02FEG871Y8YR25hQNFpf3RAwvMOO3bF9DcN": 0,
            "variable_workflow_02FEG871Y96DA2TX7gwiATbCFZiD85YnKvK": 0,
            "variable_workflow_02FEG871Y9M9S4S2MrhePyIQp7RgaoXTf8y": "",
            "variable_workflow_02FEG871YA4AA1kERH2cPKUSSeOX9GEppbE": 0,
            "variable_workflow_02FEG871YAJR624h4p5NzPlooXCIkcuYLqC": 100,
            "variable_workflow_02FEG871YAQ9V4ocdEualolDOLj66UdJ0da": ""
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target_group": true
          },
          "workflow_id": "definition_workflow_02FEG871C16PH7gCl39Zi6H3wtUU2V3HgLA",
          "workflow_name": "Secure Endpoint - List Computers"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02FEP8IYAY6WR73fAPSAHb1bjbVEpNfhvES",
        "name": "Group",
        "title": "Digest the data",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Digest the data",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02FEP8IZV014E5uTEuNqWNFhAPw6ysCsi7X",
            "name": "Execute Python Script",
            "title": "Transform Data",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Transform Data",
              "script": "import sys\nimport json\n\n# Assuming sys.argv[1] contains the JSON data as a string\ninput_data = sys.argv[1]\n\n# Load JSON data\ndata = json.loads(input_data)\n\n# Transform data to the required format\ntransformed_data = []\nfor item in data:\n    transformed_item = {\n        \"connector_guid\": item[\"connector_guid\"],\n        \"hostname\": item[\"hostname\"],\n        \"last_seen\": item[\"last_seen\"],\n        \"policy\": {\"name\": item[\"policy\"][\"name\"]}\n    }\n    transformed_data.append(transformed_item)\n\n# Store transformed data in an output variable\noutput_variable = json.dumps(transformed_data, indent=2)\n\n# Print or further process output_variable as needed\n#print(output_variable)  # Example: Print JSON output",
              "script_arguments": [
                "$activity.definition_activity_02FEP8IV4W5N91cCNlto2DHIJUpR5vInNrI.output.variable_workflow_02FEG871YACS866VsRoZWurPWbMmKetSznn$"
              ],
              "script_queries": [
                {
                  "script_query": "output_variable",
                  "script_query_name": "transformed_json",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02FEP8J11MBEH4mKt4y7niO690i1t4YaSQq",
            "name": "Execute Python Script",
            "title": "Find Duplicate GUID",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Find Duplicate GUID",
              "script": "import json\nimport sys\n\n# Input data from sys.argv[1]\ninput_data = sys.argv[1]\n\n# Preprocess JSON to replace single quotes with double quotes for keys (if necessary)\nfixed_json = input_data.replace(\"'\", '\"')\n\n# Load JSON data\ntry:\n    data = json.loads(fixed_json)\nexcept json.JSONDecodeError as e:\n    print(f\"Error decoding JSON: {str(e)}\")\n    sys.exit(1)\n\n# Transform data to the required format\ntransformed_json = []\nfor item in data:\n    transformed_item = {\n        'connector_guid': item['connector_guid'],\n        'hostname': item['hostname'],\n        'last_seen': item['last_seen'],\n        'policy': {'name': item['policy']['name']}\n    }\n    transformed_json.append(transformed_item)\n\n# Check for duplicates based on connector_guid\nconnector_guid_count = {}\nfor item in transformed_json:\n    guid = item['connector_guid']\n    if guid in connector_guid_count:\n        connector_guid_count[guid].append(item)\n    else:\n        connector_guid_count[guid] = [item]\n\n# Generate output if duplicates are found\nduplicate_output = []\nfor guid, items in connector_guid_count.items():\n    if len(items) > 1:\n        duplicate_info = {\n            'GUID': guid,\n            'Hosts with duplicate GUIDs found': len(items),\n            'Details': []\n        }\n        for item in items:\n            detail = f\"hostname: {item['hostname']} LAST SEEN: {item['last_seen']} policy_name: {item['policy']['name']}\"\n            duplicate_info['Details'].append(detail)\n        duplicate_output.append(duplicate_info)\n\n# Prepare the final output structure\noutput_variable = []\n\n# If duplicates are found, include them in the output\nif duplicate_output:\n    output_variable = duplicate_output\n\n# Convert output_variable to nicely formatted JSON string\noutput_json = json.dumps(output_variable, indent=2)\n\n# Print or use output_json as needed\n#print(output_json)",
              "script_arguments": [
                "$activity.definition_activity_02FEP8IZV014E5uTEuNqWNFhAPw6ysCsi7X.output.script_queries.transformed_json$"
              ],
              "script_queries": [
                {
                  "script_query": "output_json",
                  "script_query_name": "output",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02FEP8J24PJC64leNDWffodrDCoikEpABVm",
        "name": "Condition Block",
        "title": "Do we have any duplicate GUID?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Do we have any duplicate GUID?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02FEP8J30UAWW3cCvXDhOdPgoIIrh373gbR",
            "name": "Condition Branch",
            "title": "No duplicate GUID found",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_02FEP8J11MBEH4mKt4y7niO690i1t4YaSQq.output.script_queries.output$",
                "operator": "eq",
                "right_operand": "[]"
              },
              "continue_on_failure": false,
              "display_name": "No duplicate GUID found",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02FEP8J4D5WTT5dmqtTxVOhpGLYXqYBnW5F",
                "name": "Set Variables",
                "title": "Set Variables",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set Variables",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02FEP8IQ605CJ3m9b1LQ2d4bhP3TuysP4on.local.variable_workflow_02FEP8IQQ6G9T3iVE8ez4vXipJF4S2XOJMl$",
                      "variable_value_new": "No duplicate GUID found"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_02FEP8J5EQW2G5qblybspxA2EwOpmFhT5Dk",
            "name": "Condition Branch",
            "title": "Found duplicate GUID",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_02FEP8J11MBEH4mKt4y7niO690i1t4YaSQq.output.script_queries.output$",
                "operator": "ne",
                "right_operand": "[]"
              },
              "continue_on_failure": false,
              "display_name": "Found duplicate GUID",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02FEP8J6YWFE71Qu61rSz8oX0NfwN5f0fNg",
                "name": "Set Variables",
                "title": "Set Variables",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set Variables",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02FEP8IQ605CJ3m9b1LQ2d4bhP3TuysP4on.local.variable_workflow_02FEP8IQQ6G9T3iVE8ez4vXipJF4S2XOJMl$",
                      "variable_value_new": "$activity.definition_activity_02FEP8J11MBEH4mKt4y7niO690i1t4YaSQq.output.script_queries.output$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "rules": {
    "ruleschedule_02FE1C4TQJP135dTyJ6OcVDLrc6r3sSuxyh": {
      "name": "Daily",
      "title": "Daily",
      "description": "Daily run workflow",
      "type": "schedule.rule_schedule",
      "rule_type": "rule_schedule",
      "base_type": "rule",
      "object_type": "ruleschedule",
      "version": "1.0.0",
      "properties": {
        "calendar": "calendar_recurring_1BMfMWvgiDhSjBQ7hTSyvz3NyVZ",
        "description": "Daily run workflow",
        "display_name": "Daily",
        "interval_hours": 0,
        "interval_minutes": 0,
        "number_of_times": 1,
        "rule_type": "rule_schedule",
        "starttime": "01:00",
        "timezone": "Asia/Bangkok",
        "title": "Daily",
        "workflows_config": [
          {
            "disabled": false,
            "ref_id": "definition_workflow_02FEP8IQ605CJ3m9b1LQ2d4bhP3TuysP4on",
            "status": {
              "state": "started-polling",
              "prev_state": "started-polling",
              "error_msg": ""
            }
          }
        ]
      },
      "disabled": false,
      "unique_name": "ruleschedule_02FE1C4TQJP135dTyJ6OcVDLrc6r3sSuxyh"
    }
  },
  "target_groups": {
    "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH": {
      "unique_name": "target_group_01EJ0TQWPQWBD0qiWqClJKj9FOzwiZRfOFH",
      "name": "Default TargetGroup",
      "title": "Default TargetGroup",
      "type": "generic.target_group",
      "base_type": "target_group",
      "version": "1.0.0",
      "targets": [
        {
          "data_target_type": "web-service.endpoint",
          "view_target_type": "web-service.endpoint",
          "include_all_targets": true
        },
        {
          "data_target_type": "email.smtp_endpoint",
          "view_target_type": "email.smtp_endpoint",
          "include_all_targets": true
        }
      ],
      "object_type": "target_group"
    }
  },
  "atomic_workflows": [
    "definition_workflow_02FEG871C16PH7gCl39Zi6H3wtUU2V3HgLA"
  ],
  "dependent_workflows": [
    "definition_workflow_02FEG871C16PH7gCl39Zi6H3wtUU2V3HgLA"
  ]
}
